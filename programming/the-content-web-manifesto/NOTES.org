* [[README.md][README]]

- https://www.fixbrowser.org/

** Document how terminal browsers can invoke a full browser to execute JavaScript

See [[https://www.gnu.org/software/emacs/manual/html_node/eww/Advanced.html]], w3m has similar stuff.

Also:

- https://github.com/abhinavsingh/proxy.py Extensible Python proxy
- https://github.com/TempoWorks/txtdot
- https://github.com/4383/photonos
- https://sr.ht/%7Ebptato/chawan/
- https://offpunk.net/

Browsers as a platform to manage content:

- Just view the content as HTML with user-defined styling
- Archive all that we see so that we can locate content we have read easily, share with others, etc.
- RSS/Gemfeed/content subscription

** Annotate URLs with another URLs

- For example, add transcriptions to comic strips that do not have them
- The server pushes serialized bloom filters of annotated URLs (or entire annotation sets?) so that clients do not have to leak what they are browsing.
- Maybe https://dokie.li/
- Alternative approach with Violentmonkey for accessibility purposes: [[https://github.com/alexpdp7/aelevenymonkey]].

** NoScript configuration merge
